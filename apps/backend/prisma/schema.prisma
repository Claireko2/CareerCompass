// ---------- GENERATOR & DATASOURCE ----------
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// ---------- NORMALISED DOMAIN MODELS ----------
model Company {
  id        String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name      String       @unique
  website   String?
  createdAt DateTime     @default(now())
  jobs      JobPosting[]
}

model Location {
  id        String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  city      String?
  region    String?
  country   String
  latitude  Float?
  longitude Float?
  jobs      JobPosting[]

  @@index([city, region, country])
  @@unique([city, region, country])
}

// ---------- JOB POSTINGS ----------
model JobPosting {
  id            String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  jobId         String     @unique                    
  title         String
  description   String     @db.Text
  qualifications   Json?
  responsibilities Json?
  benefits         Json?
  
  postedAt      DateTime?
  scrapedAt     DateTime   @default(now())
  url           String
  updatedAt     DateTime   @updatedAt

  // relations
  company       Company    @relation(fields: [companyId],  references: [id])
  companyId     String     @db.Uuid
  location      Location   @relation(fields: [locationId], references: [id])
  locationId    String     @db.Uuid
  skills        JobSkill[]

  @@index([companyId])  
  @@index([locationId]) 
}

// ---------- SKILLS & M:N JOIN ----------
model Skill {
  id          String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  label       String
  altLabels   Json?      @map("alt_labels")
  skill_type  String?
  status      String?
  modified_at DateTime?  @db.Timestamp(6)
  description String?

  skillsInJobs JobSkill[]

  @@map("esco_skills")
}

model JobSkill {
  jobId   String   @db.Uuid
  skillId String   @db.Uuid

  job     JobPosting @relation(fields: [jobId],   references: [id], onDelete: Cascade)
  skill   Skill      @relation(fields: [skillId], references: [id], onDelete: Cascade)

  @@id([jobId, skillId]) 
  @@index([skillId])     
}
