generator client {
  provider = "prisma-client-js"
  previewFeatures = ["multiSchema"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id    Int     @id @default(autoincrement())
  name  String
  email String  @unique
}

model JobPosting {
  id            String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  jobId         String   @unique
  title         String
  employer      String
  city          String?
  region        String?
  country       String?
  description   String   @db.Text
  postedAt      DateTime
  scrapedAt     DateTime @default(now())
  url           String
  minSalary     Float?
  maxSalary     Float?
  currency      String?
  salaryPeriod  String?
  updatedAt     DateTime @updatedAt
  skills        JobSkill[]
}

model JobSkill {
  jobId     String
  skillId   String   @db.Uuid        
  
  @@id([jobId, skillId])
  @@index([skillId])
  
  job       JobPosting @relation(fields: [jobId], references: [id], onDelete: Cascade)
  skill     Skill      @relation(fields: [skillId], references: [id], onDelete: Cascade)
}

model Skill {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  label       String
  altLabels   Json?     @map("alt_labels")
  skill_type  String?                
  status      String?                
  modified_at DateTime?  @db.Timestamp(6)
  description String?
  
  JobSkill    JobSkill[]

  @@map("esco_skills")  
 
}




